{"home":{"content":"# Auth w/Passport\n\nWelcome to **Lecture 35**! Here is a brief class breakdown.\n\n## Learning Objectives\n\n1. Practice debugging complex serverside code faults\n2. Implement basic user authentication with sessions\n3. Re-implement with passport\n\n## To Do Today\n\n### [Warmup](#warmup)\n\n### [Passpostjs](#passportjs)","idx":0},"title":{"content":"Auth w/Passport\n","idx":1},"desc":{"content":"Vanilla Use Auth + with passport.js","idx":2},"warmup":{"content":"# Warmup\n\nHere are some basic practice problems.\n\nYou will need **[this](https://github.com/mottaquikarim/nycda_lecture_35_debug)** Github repo for both problems. **Be sure to use this repo to begin**.\n\n## Exercise 1\n\nNotice how none of the login/signup methods are working. (**Question**: how are they not working??).\n\nLook through the code, troubleshoot this issue.\n\n## Exercise 2\n\nImplement login success logic for your auth endpoint.","idx":3},"passpostjs":{"content":"# Passport.JS\n\nWhat is **[passport](http://passportjs.org/docs)**?\n\n> Library for handling user authentication  more easily.\n\nPassport works by implementing **strategies** which define how authentication should work for an app.\n\n## Installation\n\n```bash\nnpm install --save passport\n```\n\n## Usage Examples\n\nUsing **Local Authentication**.\n\n### Installation\n\n```bash\nnpm install --save passport-local\n```\n\n```javascript\nconst passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\n\npassport.serializeUser(function(user, done) {\n  done(null, user);\n});\n\npassport.deserializeUser(function(user, done) {\n  done(null, user);\n});\npassport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password'\n},(email, password, done) => {\n    // ... app specific implementation\n    // ... if err\n    return done(err, user, info);\n\n    // ... if success\n    return done(null, user);\n  }\n));\napp.use(passport.initialize());\napp.use(passport.session());\n\n// ... later on ...\n\n// login route\napp.post('/auth/login', (request, response, next) => {\n    // grab appropriate data from request payload\n\tconst body = request.body;\n\tconst {email, password} = body;\n    console.log('here');\n\n    passport.authenticate('local',(err, user, info) => {\n       \n        if (err) {\n            // ... handle\n        }\n        if (!user) {\n            // ... handle\n        }\n\n        // otherwise, we good ...\n        request.logIn(user, function(err) {\n          console.log('in login', err);\n          if (err) { return next(err); }\n\n          // ... send\n        });\n    })(request, response, next);\n});\n```\n\n\n","idx":4},"__list__":["home","title","desc","warmup","passpostjs"]}